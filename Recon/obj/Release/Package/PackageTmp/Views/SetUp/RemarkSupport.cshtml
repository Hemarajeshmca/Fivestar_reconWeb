@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
@using Kendo.Mvc.Resources;
@model Recon_Model.CategoryViewModel

<!Doctype html>
<html>
<head>
    <title></title>
    <style>
             .k-popup.k-list-container {
         width:250px !important;
     }
        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-state-active {
            display: none;
        }

        div.k-window {
            display: inline-block;
            position: absolute;
            z-index: 10001;
            border-style: solid;
            border-width: 1px;
            padding-top: 1em;
            width: 40%;
            font-weight: normal;
        }

        .k-grid-header th.k-with-icon .k-link {
            margin-right: -11px;
        }

        .k-edit-form-container {
            position: relative;
            width: 100%;
        }

        .k-grid-header th.k-with-icon .k-link {
            margin-right: -11px;
            color: #fff !important;
        }

        a.k-button.k-button-icontext.k-grid-Edit, a.k-button.k-button-icontext.k-grid-edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete {
            background: transparent;
            border-color: transparent;
        }

        .k-grid-filter.k-state-active {
            background-color: rgb(51, 122, 183);
        }

        .k-state-active {
            display: block;
        }
         .k-webkit {
            overflow: hidden !important;
        }
    </style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-orange" style="height:auto;padding:10px;">
                        <div class="box-header text-center with-border">
                            <h3 class="box-title">Exception Theming</h3>
                        </div>
                        <div class="row" style="margin-left:-16px;">
                            <div class="col-sm-2">
                                <label for="period_from" class="title">Date From</label>
                                <input class="cusDate" data-role='datepicker' style="width:100%" id="period_from" name="period_from" />
                            </div>
                            <div class="col-sm-2">
                                <label for="period_from" class="title">Date To</label>
                                <input class="cusDate" data-role='datepicker' style="width:100%" id="period_to" name="period_to" />
                            </div>
                            <div class="col-sm-4">
                                <label for="filetype" class="title">Recon Name</label><br />
                                @(Html.Kendo().DropDownList()
                                                    .Name("ReconName_id")
                                                    .DataTextField("ReconName")
                                                    .DataValueField("ReconName_id")
                                                    .HtmlAttributes(new { style = "width:100%" })
                                                    .DataSource(source => { source.Read(read => { read.Action("ApplyRecontype_drop", "ApplyRule"); }).ServerFiltering(true); }))
                            </div>
                            <div class="col-sm-2">
                                <button type="button" id="run" class="btn btn-primary" style="margin-top:18%;"><i class="fa fa-eye" aria-hidden="true"></i>&nbsp;Show</button>&nbsp;
                                <button type="button" id="exportExcel" onclick="exportExcel()" style="margin-left: 90px; margin-top: -50px;" class="btn btn-primary"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp;</button>
                            </div>
                        </div>

                        <div id="Process">
                            <div class="form-group">
                                <div>
                                    @(Html.Kendo().Grid<Recon_Model.ManualMatchoff_model>().Name("processGrid")
                                                .HtmlAttributes(new { style = "height:380px;line-height:2em;font-weight:normal" })
                                        .Columns(columns =>
                                            {
                                                columns.Command(command =>
                                                {
                                                    command.Custom("Edit").Text("<span class='fa fa-bars' style='color:#357ab8;font-size: 12px;'>  Remark").Click("Reason");
                                                }).Title("Action").Width(100);
                                                columns.Bound(m => m.SlNo).Title("Sl.No").Width(60);
                                                columns.Bound(m => m.tran_gid).Title("tran").Width(100).Hidden();
                                                columns.Bound(m => m.AccountNo).Title("A/c No").Width(100);
                                                columns.Bound(m => m.TranDate).Title("Tran Date").Width(90);
                                                columns.Bound(m => m.ValueDate).Title("Value Date").Width(90).Hidden();
                                                columns.Bound(m => m.Description).Title("Trans Desc").Width(350);
                                                columns.Bound(m => m.Accountmode).Title("A/c Mode").Width(80);
                                                columns.Bound(m => m.Exceptionamountcon).Title("Exception Amount").Width(150);
                                                columns.Bound(m => m.amountcon).Title("Amount").Width(100);
                                                columns.Command(cmd =>
                                                {
                                                    cmd.Custom("View").Text("<span class='fa fa-eye' style='color:#357ab8;font-size: 12px;'>").Click("viewDetails");
                                                }).Title("Action").Width(50);
                                            })
                                    .Editable(editable =>
                                    { editable.Mode(GridEditMode.PopUp).TemplateName(""); })
                                    .Excel(excel => excel
                                    .AllPages(true)
                                    .FileName("Remark suppport"))
                                    .Filterable()
                                    .Sortable()
                                    .Scrollable()
                                    .Resizable(resize => resize.Columns(true))
                                    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(5000)
                                    .Model(model =>
                                    {
                                        model.Id(p => p.SlNo);
                                        model.Field(p => p.Select).Editable(false);
                                    })
                                   .Read(read => read.Action("GridManualmatchoff", "ManualMatchOff").Data("getslno"))
                                   .Update(update => update.Action("AddMatchOff_Save", "ManualMatchoff_model"))
                                    ))
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dialog">
                        <button type="button" id="exportExcel1" style="margin-left:18px;margin-top:-7px" onclick="exportExcel1()" class="btn btn-primary"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp;</button>
                        <div id="Maingrid" class="col-md-12" style="margin:auto;height:auto;top:10px;width:100%;"> </div>
                    </div>
                    <div id="dialog1">
                        <input type="hidden" id="tranrecon_gid">
                        <div class="row" >
                            <div class="col-sm-8" style="margin-left:10%;">
                                <label for="filetype" class="title">Reason</label><br />
                                @(Html.Kendo().DropDownList()
                                                    .Name("remark_desc")
                                                    .DataTextField("remark_desc")
                                                    .DataValueField("remark_desc")
                                                    .HtmlAttributes(new { style = "width:170%" })
                                                    .DataSource(source => { source.Read(read => { read.Action("Remark_drop", "SetUp"); }).ServerFiltering(true); }))
                            </div>
                        </div>
                        <div class="row" style="padding-left:80px">
                            <label></label> <br />
                            <button type="button" value="Refresh" onclick="editDetails()" id="btn_submit" class="btn btn-primary"><i class="fa fa-refresh" aria-hidden="true"></i>&nbsp;Submit</button>&nbsp;
                            <button type="button" value="Clear" onclick="" id="btn_sendmail" class="btn btn-primary"><i class="fa fa-eraser" aria-hidden="true"></i>&nbsp;cancel</button>&nbsp;
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</body>
</html>
<script type="text/javascript">
    var trangid;
    $(document).ready(function () {
        kendodate_format();
        var mindate = '@Request.RequestContext.HttpContext.Session["mindate"]';
        $("#period_from").kendoDatePicker({
            value: mindate,// sets max date
            format: "dd-MM-yyyy"
        });
        $("#period_to").kendoDatePicker({
            value: new Date(),// sets max date
            format: "dd-MM-yyyy"
        });

        $("#Process").hide();
        $("#exportExcel").hide();
        $("#exportExcel1").hide();
        $("#dialog1").hide();
    })
    //function getFormated_StringDate(date) {   //get DD/MM/YYYY or MM/DD/YYYYY
    //    if (date != "" || date != undefined) {
    //        var d = date.split("/");
    //        return d[2] + "-" + d[1] + "-" + d[0];
    //    }
    //}
    function exportExcel() {
        $("#processGrid").getKendoGrid().saveAsExcel();
    }
    function getslno() {
        var grid = $("#processGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        //trangid = (model.tran_gid);
        var ReconName_id = $("#ReconName_id").val();
        if (ReconName_id == "") {
            ReconName_id = 0;
        }
        var period_from = $('#period_from').val();
        var period_to = $("#period_to").val();
        if (period_from == "") {
            var formatted_period_from = null;
        } else {
            formatted_period_from = getFormated_StringDate(period_from);
        }
        if (period_to == "") {
            var formatted_period_to = null;
        } else {
            var formatted_period_to = getFormated_StringDate(period_to);
        }
        return { recongid: ReconName_id, periodfrom: formatted_period_from, periodto: formatted_period_to }
    }
    $('#run').click(function () {
        debugger;
        $("#Process").show();
        $("#processGrid").data("kendoGrid").dataSource.read();
        $("#exportExcel").show();
    });
    function onRequestEnd(e) {
        debugger;
    }
    function editDetails() {
        debugger;
        var grid = $("#processGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        
        var tranrecon_gid = $("#tranrecon_gid").val();
        var remark1 = $("#remark_desc").data("kendoDropDownList").value();

        $.ajax({
            type: "POST",
            data: '{remark1: "' + remark1 + '",tran_gid:  "' + trangid + '" }',
            url: "/SetUp/RemarkReason",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                debugger;
                if (data[1] > 0) {
                    $.dialog({
                        title: 'Imapct',
                        content: data[0],
                        type: 'green',

                    });
                    $("#tabs1").show();
                    $("#applyruledtl_gid").val(data[1]).trigger("change");
                    var wnd1 = $("#dialog1").data("kendoWindow");
                    if (wnd1) {
                        wnd1.close();
                    }
                }
                else {
                    $.dialog({
                        title: 'Impact',
                        content: data[0],
                        type: 'green',
                    });
                    //event.container.data("kendoWindow").one("close", onEditorTemplateClosing);
                }
            },

        });
    }
    function Reason(e) {
        window_open1();
    }
    function window_open1() {
        var grid = $("#processGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        var tranrecon_gid = model.tranrecon_gid;
        trangid = (model.tran_gid);
        $("#tranrecon_gid").val(tranrecon_gid);
        $("#dialog1").kendoWindow();
        var dialog1 = $("#dialog1").data("kendoWindow");
        dialog1.open().element.closest(".k-window").css({
            top: 143,
            left: 424, height: 144, width: 351
        });
        dialog1.title("Remark");
        dialog1.bind("open", window_open);
    }
    function viewDetails(e) {
        window_open();
    }
    function window_open() {
        debugger
        var table_name = "recon_trn_vtranrecon"
        var grid = $("#processGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));

        var filetype = model.filetype;
        var tranrecon_gid = model.tranrecon_gid;
        var reportcondition = "and tranrecon_gid = " + tranrecon_gid
        $.ajax({
            type: "POST",
            data: '{table_name: "' + table_name + '",condition:  "' + reportcondition + '" }',
            url: "/Report/ReportExpenceGrid_Read",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (Data1) {
                $("#dialog").kendoWindow();
                var dialog = $("#dialog").data("kendoWindow");
                dialog.open().element.closest(".k-window").css({
                    top: 121,
                    left: 300, height: 400, width: 900
                });
                dialog.title("Manual Match - Rule Based");
                dialog.bind("open", window_open);
                debugger
                $("#exportExcel1").show();
                var columns = [];
                var chkval = JSON.parse(Data1);
                var arr = [];
                $.each(chkval, function (i, e) {
                    debugger;
                    $.each(e, function (key, val) {
                        arr.push(val);
                    });

                });
                if (arr == "No Records Found!" || arr == "Error in Data!") {
                    alert("No Records found..!");
                    return false;
                }
                var data = JSON.parse(Data1);
                // var data2 = JSON.parse(result.Data2);
                var i = 0;

                var entryIndex = "entries[" + i + "]";
                for (var val in data[0]) {

                    if (val == "Collection Center Name") {
                        columns.push({
                            field: entryIndex,
                            title: key,
                            attributes: { style: "text-align: left;" }
                        });
                    }
                    else {
                        if (val != "Collection Center Name")
                            columns.push({
                                field: entryIndex,
                                title: val,
                            });
                    }
                    i = i + 1;
                    entryIndex = "entries[" + i + "]";
                }
                var rows = [];
                var data1 = JSON.parse(Data1);

                $.each(data1, function (i, e) {
                    var entryArray = [];
                    $.each(e, function (key, val) {

                        entryArray.push(val);
                    });
                    rows.push(kendo.observable({
                        entries: entryArray
                    }));

                });

                var viewModel = kendo.observable({
                    gridRows: rows
                });

                var configuration = {
                    //dataBound: onDataBound,
                    height: 350,
                    navigatable: true,
                    groupable: false,
                    editable: false,
                    sortable: true,
                    Scrollable: true,
                    filterable: false,
                    pagable: false,
                    resizable: false,
                    persistSelection: true,
                    selectable: "false",
                    columns: columns,
                    rows: viewModel,
                    excel: {
                        fileName: "Manual Match.xlsx",
                        filterable: true,
                        allPages: false
                    },
                };
                $("#example").remove();
                $('#Maingrid').append('<div id="example" style="position:relative" class="k-content"><table id="grid" data-bind="source: gridRows" style="position:relative;overflow:scroll;width:100%"></table></div>');
                var timeEditGrid = $("#grid").kendoGrid(configuration).data("kendoGrid");
                kendo.bind($("#grid"), viewModel);

                var grid = $("#grid").data("kendoGrid");
                for (var i = 0; i < grid.columns.length; i++) {
                    if (i != grid.columns.length) {
                        grid.autoFitColumn(i);  //autofit each column.
                    }
                }
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
</script>