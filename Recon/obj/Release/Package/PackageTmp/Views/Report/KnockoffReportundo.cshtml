@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
@model Recon_Model.DedupeRule_model

<!Doctype html>
<html>
<head>
    <title></title>
    <style>
        .btn-danger {
                background-color: #d43f3a;
                border-color: #d43f3a;
                padding: 2px 16px 4px 10px;
            }
              .k-popup.k-list-container {
    width:210px !important;
    }
           .btn-danger:hover, .btn-danger:active, .btn-danger.hover {
        background-color: #d43f3a;


    }

            .k-pager-sizes{
             display: inline-flex !important;
            margin-left: 0% !important;
            margin-top: -4% !important;
            width: 24% !important;
         }
    </style>
    <style>
        .btn-success {
            padding: 2px 16px 4px 10px;
        }
    </style>

    <style>
        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-state-active {
            display: none;
        }
        /*.k-window-content {
                    width: 1002px;
                   }*/
        a.k-button.k-button-icontext.k-grid-Edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete, a.k-button.k-button-icontext.k-grid-edit {
            background: transparent;
            border-color: transparent;
        }
        /*a.k-link {
            color: #fff !important;
        }*/
        .k-grid-header .k-header > .k-link {
            color: #fff;
        }
         .k-grid-filter.k-state-active {
            background-color: rgb(51, 122, 183);
        }

        .k-state-active {
            display: block;
        }
          .k-webkit {
            overflow: hidden !important;
        }
    </style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-orange" style="height:auto;padding-top:10px">
                        <div class="box-header text-center with-border">
                            <h3 class="box-title">Undo KO</h3>
                        </div>
                        <div class="row" style="margin-left:10px;">
                            @*<div class="col-sm-2">
                                <label for="period_from" class="title">Date From</label>
                                <input class="cusDate" data-role='datepicker' id="period_from" name="period_from" />
                            </div>
                            <div class="col-sm-2">
                                <label for="period_To" class="title"> Date To</label>
                                <input class="cusDate" data-role='datepicker' id="period_to" name="period_to" />
                            </div>*@
                           
                            <div class="col-sm-3">
                                <label for="filetype" class="title">Recon Name</label>
                                @(Html.Kendo().DropDownList()
                                                        .Name("ReconName_id")
                                                        .DataTextField("ReconName")
                                                        .DataValueField("ReconName_id")
                                                        .HtmlAttributes(new { style = "height:25px;width: 100%;font-weight: normal" })
                                                                @*.DataSource(source => { source.Read(read => { read.Action("ApplyRecontype_drop", "ApplyRule"); }).ServerFiltering(true); }))*@
                                                        .DataSource(source => { source.Read(read => { read.Action("getuserrecon", "Report"); }).ServerFiltering(true); }))
                            </div>
                            <div class="col-sm-2">
                                <label for="Reconname" class="title">Ko Id</label><br />
                                <input class="form-control" style="width:100%;height:29px;" id="koid" name="koid" type="text" data-bind="    value: koid">
                                <input type="hidden" id="review">
                            </div>
                            <div class="col-sm-4" style="margin-top:22px;">
                                @*<button type="button" value="filter" onclick="OnFilter()" id="btn_submit" class="btn btn-primary">&nbsp;Advance Filter</button>&nbsp;*@
                                <button type="button" id="Runprocess" onclick="validation()" class="btn btn-success"><i class="fa fa-check" aria-hidden="true"></i>&nbsp;Run</button>
                                <button type="button" id="exportExcel" onclick="exportExcel()" class="btn btn-primary"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp;</button>
                            </div>
                          
                        </div>

                        <div class="row" style="margin-left:-21px;">
                            <div class="col-sm-12">
                                <div class="panel-body" style="width:100%;max-height:100%">
                                    <div class="col-md-12" id="Process">
                                        <div class="form-group">
                                            @using (Html.BeginForm("Manualmatch", "Manualmatch", FormMethod.Post, new { @id = "form1" }))
                                            {
                                                <div>
                                                    @(Html.Kendo().Grid<Recon_Model.Report_model>().Name("knockoffGrid")
                                        .HtmlAttributes(new { style = "line-height:2em;height:370px;width:102%;font-weight:normal;" })
                                                    //.ToolBar(toolbar => toolbar.Create().Text("Add To Match Off"))
                                        .Columns(columns =>
                                            {
                                                columns.Bound(m => m.koid).Title("Ko Id").Width(50);
                                                columns.Bound(m => m.kodate).Title("Ko Date").Width(100);
                                                columns.Bound(m => m.reconname).Title("Recon Name").Width(100);
                                                columns.Bound(m => m.rulename).Title("Rule Name").Width(90);
                                                columns.Bound(m => m.mappingdesctype).Title("Mapping Type").Width(90);
                                                columns.Bound(m => m.Knockoffby).Title("KnockOff By").Width(90);
                                                columns.Bound(m => m.Knockoffamount).Title("KnockOff Amount").Width(90);
                                                columns.Bound(m => m.matchoff_type).Title("MathOff Type").Width(200).Hidden();
                                                columns.Command(cmd =>
                                                {
                                                    cmd.Custom("View").Text("<span class='fa fa-eye' style='color:#357ab8;font-size: 12px;'>").Click("editDetails");
                                                    cmd.Custom("Delete").Text("<span class='fa fa-trash' style='color:#357ab8;font-size: 12px;'>").Click("myDeleteJs");
                                                }).Title("Action").Width(50);

                                            })
                                      .Editable(editable =>
                             { editable.Mode(GridEditMode.PopUp).TemplateName(""); })
                                    .Pageable(pageable => pageable
                                        .Refresh(true)

                                        .ButtonCount(5))
                                                  .Filterable()
                                                    .Excel(excel => excel
                                                          .AllPages(true)
                                                        .FileName("Reverse Match.xlsx"))
                                    .Sortable()
                                     .Selectable()
                                    .Scrollable()
                                                    //.Resizable(resize => resize.Columns(true))
                                    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(5000)
                                        //.Events(events => events.Error("error_handler"))
                                    .Model(model =>
                                        {
                                            model.Id(p => p.koid);
                                        })
                                   .Create(Create => Create.Action("SaveEmployee", "DedperuleList"))
                                   .Read(read => read.Action("ReportKnockOffGrid_Read", "Report").Data("getslno"))
                                   .Update(update => update.Action("AddMatchOff_Save", "ManualMatchoff_model"))
                                    ))
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="dialog">
                            <div id="Maingrid" class="col-md-12" style="margin:auto;height:auto;top:10px;width:100%;"> </div>
                        </div>
                    </div>
                    @*<div id="filter">
                        <div class="row" style="margin-top:5px;margin-left:7px">
                            <div class="col-md-12">
                                <div class="col-sm-2">
                                    <label for="Reconname" class="title">Ko Amount</label><br />
                                    <input class="form-control" style="width:100%;height:17px;" id="koamount" name="koamount" onkeypress="return isNumberKey(event)" type="text" data-bind="    value: koamount">
                                </div>
                                <div class="col-sm-2">
                                    <label for="Reconname" class="title">Ko Id</label><br />
                                    <input class="form-control" style="width:100%;height:17px;" id="koid" name="koid" type="text" data-bind="    value: koid">
                                    <input type="hidden" id="review">
                                </div>
                                <div class="col-sm-2">
                                    <label for="Reconname" class="title">KnockOff By</label>
                                    <input class="form-control" style="width:100%;height:17px;" id="knockoffby" name="knockoffby" type="text" data-bind="    value: knockoffby">
                                </div>
                                <div class="col-sm-3" style="align-content:center;margin-top:4px;">
                                    <label></label> <br />
                                    <button type="button" value="Refresh" onclick="validation()" id="btn_submit" class="btn btn-primary"><i class="fa fa-refresh" aria-hidden="true"></i>&nbsp;Refresh</button>&nbsp;
                                    <button type="button" value="Clear" onclick="OnClear()" id="btn_sendmail" class="btn btn-danger"><i class="fa fa-eraser" aria-hidden="true"></i>&nbsp;Clear</button>&nbsp;
                                </div>
                                </div>
                            </div>
                    </div>*@
                </div>
            </div>
        </section>
    </div>
</body>

</html>
<script type="text/javascript">
    var pageno = 1;
    var pagesize = 100;
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            $.alert({
                content: message,
                type: 'red',
            });
        }
    }

    $(document).ready(function () {
        kendodate_format();
        debugger;
        //$("#period_from").kendoDatePicker({
        //    value: new Date(),// sets max date
        //    format: "dd-MM-yyyy"
        //});
        //$("#period_to").kendoDatePicker({
        //    value: new Date(),// sets max date
        //    format: "dd-MM-yyyy"
        //});
        $("#Process").hide();
        $("#exportExcel").hide();
        $("#filter").hide();
    });
    
    function exportExcel() {
        $("#knockoffGrid").getKendoGrid().saveAsExcel();
    }
    function validation() {
        var recon_gid = $("#ReconName_id").data("kendoDropDownList").value();
        var koid = $("#koid").val();
        var msg = "";
        if (recon_gid == "0" || recon_gid == undefined || recon_gid == "") {
            $.alert({
                title: 'Impact',
                content: "Recon name should not be Empty",
                type: 'blue',


            });
            return;
        }
        if (koid == "0" || koid == undefined || koid == "") {
            $.alert({
                title: 'Impact',
                content: "knockoff ID  should not be Empty",
                type: 'blue',


            });
            return;
        }
        if (msg == "") {
            Runprocess()
        } else {
            $.dialog({
                title: 'Impact',
                content: msg,
                type: 'green',
            });
        }
        return msg;
    }
    function Runprocess() {
        debugger;
        var msg = "";

        var wnd = $("#filter").data("kendoWindow");
        if (wnd) {
            wnd.close();
        }
        $("#Process").show();
        $("#exportExcel").show();
        $("#knockoffGrid").data("kendoGrid").dataSource.read();
    }
   
    function getslno() {
        debugger;
        var Recon_gid = $("#ReconName_id").val();
        var reportcondition = "";

        var koid = $("#koid").val();
        if (koid == undefined || koid == "") {
            koid = 0;
        }

        if (Recon_gid != 0) {
            reportcondition += " and a.recon_gid = \'" + Recon_gid + "\'";
        }
        
        if (koid != "") {
            reportcondition += " and a.ko_gid = \'" + koid + "\'";
        }

        //return { table_name: table_name, condition: reportcondition, recon_gid: Recon_gid, Reportcode: report_code, Resultsetflag: resultsetflag }
        return { condition: reportcondition, recon_gid: Recon_gid }

    }

    //function getslno() {
    //    debugger;


    //    return{}


    //}
    function editDetails(e) {
        debugger
        window_open();
    }
  
    function window_open() {
        debugger
        var recon_gid = $("#ReconName_id").data("kendoDropDownList").value();
        var grid = $("#knockoffGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        var koopId = model.koid;
        var table_name = "";
        var str1 = "and";
        var reportcondition;
        reportcondition = str1 + " " + "a.ko_gid = " + "'" + '' + koopId + '' + "'"
        $.ajax({
            type: "POST",
            data: '{table_name: "' + table_name + '",condition:  "' + reportcondition + '",recon_gid:"'+recon_gid+'" }',
            // url: "/Report/ReportKnockOFFGrid_ReadVIEW",
            url: '@Url.Action("ReportKnockOFFGrid_ReadVIEW", "Report")',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (Data1) {
                $("#dialog").kendoWindow();
                var dialog = $("#dialog").data("kendoWindow");
                dialog.open().element.closest(".k-window").css({
                    top: 121,
                    left: 300, height: 400, width: 900
                });
                dialog.title("KnockOff Details");
                dialog.bind("open", window_open);
                debugger
                var columns = [];
                var chkval = JSON.parse(Data1);
                var arr = [];
                $.each(chkval, function (i, e) {
                    debugger;
                    $.each(e, function (key, val) {
                        arr.push(val);
                    });

                });
                if (arr == "No Records Found!" || arr == "Error in Data!") {
                    alert("No Records found..!");
                    return false;
                }


                var data = JSON.parse(Data1);
                // var data2 = JSON.parse(result.Data2);
                var i = 0;

                var entryIndex = "entries[" + i + "]";
                for (var key in data[0]) {

                    var propType = typeof data[0][key];
                    if (key != "") {
                        columns.push({
                            field: entryIndex,
                            title: key,
                            type: propType,
                            width: 200,
                            //attributes: { style: "text-align: right;" }
                        });
                    }
                    i = i + 1;
                    entryIndex = "entries[" + i + "]";
                }

                var rows = [];
                var data1 = JSON.parse(Data1);

                $.each(data1, function (i, e) {
                    var entryArray = [];
                    $.each(e, function (key, val) {

                        entryArray.push(val);
                    });
                    rows.push(kendo.observable({
                        entries: entryArray
                    }));

                });

                var viewModel = kendo.observable({
                    gridRows: rows
                });

                var configuration = {
                    //dataBound: onDataBound,
                    height: 350,
                    navigatable: true,
                    groupable: true,
                    editable: false,
                    sortable: true,
                    Scrollable: true,
                    filterable: true,
                    pagable: false,
                    resizable: true,
                    persistSelection: true,
                    selectable: "false",
                    columns: columns,
                    rows: viewModel
                };
                $("#example").remove();
                $('#Maingrid').append('<div id="example" style="position:relative" class="k-content"><table id="grid" data-bind="source: gridRows" style="position:relative;overflow:scroll;width:100%"></table></div>');
                var timeEditGrid = $("#grid").kendoGrid(configuration).data("kendoGrid");
                kendo.bind($("#grid"), viewModel);

                var grid = $("#grid").data("kendoGrid");

            },
            error: function (result) {
                console.log(result);
            }
        });
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    function myDeleteJs() {
        debugger;
        var grid = $("#knockoffGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        var Dkoid = (model.koid);
        $.confirm({
            title: 'Message',
            content: 'Are you sure to Delete this Record',
            buttons: {
                confirm: function () {
                    $.confirm({
                        title: 'Delete Reason',
                        content: '' +
                        '<form action="" class="formName">' +
                        '<div class="form-group">' +
                        '<label>Reason</label>' +
                        '<input type="text" placeholder="Reason" class="name form-control" required />' +
                        '</div>' +
                        '</form>',
                        buttons: {
                            formSubmit: {
                                text: 'Submit',
                                btnClass: 'btn-blue',
                                action: function () {
                                    var name = this.$content.find('.name').val();
                                    if (!name) {
                                        $.alert('Reason cannot be empty');
                                        return false;
                                    }
                                    //var user_code = "admin";
                                    var user_code = '@System.Web.Configuration.WebConfigurationManager.AppSettings["usercode"]';
                                    $.ajax({
                                        type: "POST",
                                        data: '{name: "' + name + '",Dkoid:  "' + Dkoid + '",user_code:  "' + user_code + '" }',
                                        url: '@Url.Action("ReportKnockOFFGrid_del", "Report")',
                                       // url: "/Report/ReportKnockOFFGrid_del",
                                        dataType: "json",
                                        contentType: 'application/json; charset=utf-8',
                                        success: function (Data1) {
                                            $.dialog({
                                                title: 'Impact',
                                                content: Data1,
                                                type: 'green',
                                            });
                                            $("#knockoffGrid").data("kendoGrid").dataSource.read();
                                        },
                                    });
                                }
                            },
                            cancel: function () {
                                //close
                            },
                        },

                    });
                },
                cancel: {
                    text: 'cancel',
                    btnClass: 'btn-blue',
                    keys: ['enter', 'shift'],
                }
            }
        });


    }
    function OnFilter() {
        var msg = "";
        var recon_gid = $("#ReconName_id").data("kendoDropDownList").value();
        if ($("#Period_from").val() != "" || $("#Period_from").val() != undefined) {

        }
        else {
            msg += "Select Period From Date";
        }

        if ($("#Period_To").val() != "") {

        }

        else {
            msg += " Select Period To Date";
        }
        if (recon_gid == "0" || recon_gid == undefined || recon_gid == "") {
            $.alert({
                title: 'Impact',
                content: "Recon name should not be Empty",
                type: 'blue',


            });
            return;
        }
        if ($("#ReconName_id").data("kendoDropDownList").value() != "0") {

        }
        else {
            msg += "Select Recon Name";
        }
        if (msg == "") {
            window_openfilter();
        } else {
            $.dialog({
                title: 'Impact',
                content: msg,
                type: 'green',
            });
        }
        return msg;

    }
    function window_openfilter() {
        $("#filter").kendoWindow();
        var dialog = $("#filter").data("kendoWindow");
        dialog.open().element.closest(".k-window").css({
            top: 121,
            left: 300, height: 108, width: 717
        });
        dialog.title("Advance Filter");
        dialog.bind("open", window_openfilter);
    }
    function OnClear() {
        $("#koamount").val("");
        $("#koid").val("");
        $("#knockoffby").val("")
    }

</script>




