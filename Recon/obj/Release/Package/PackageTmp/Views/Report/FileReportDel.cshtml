@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
<!Doctype html>
<html>
<head>
    <title></title>
    <style>
        .btn-success {
            padding: 2px 16px 4px 10px;
        }
        .th.k-header{
            background-color:white;
        }
       .k-grid-header .k-header > .k-link {
            color: #fff;
        }
             .k-popup.k-list-container {
    width:210px !important;
    }

              .k-pager-sizes{
             display: inline-flex !important;
            margin-left: 0% !important;
            margin-top: -4% !important;
            width: 24% !important;
         }
    </style>

    <style>
        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-state-active {
            display: none;
        }
         a.k-button.k-button-icontext.k-grid-Edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete {
            background: transparent;
            border-color: transparent;
        }   
       .k-grid-header th.k-with-icon .k-link {
            margin-right: -11px;
           color:#fff !important;
            }

        .k-state-active {
            display: block;
        }
          .k-webkit {
            overflow: hidden !important;
        }
    </style>
</head>

<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-orange" style="height:auto;padding:10px">
                        <div class="box-header text-center with-border">
                            <h3 class="box-title">File Deletion</h3>
                        </div>
                        <div class="row" style="margin-left:-14px;">
                            <div class="col-sm-2">
                                <label for="period_from" class="title">Date From</label>
                                <input class="cusDate" data-role='datepicker' id="period_from" name="period_from" />                               
                            </div>
                            <div class="col-sm-2">
                                <label for="period_To" > Date To</label>
                                <input class="cusDate" data-role='datepicker' id="period_to" name="period_to" />
                            </div>
                            <div class="col-sm-3">
                                <label for="filetype" class="title">File Type</label>
                                @(Html.Kendo().DropDownList()
                               .Name("FileType")
                               .DataTextField("FileType_desc")
                               .DataValueField("FileType")
                               .HtmlAttributes(new { style = "width:100%;font-weight: normal" })
                               .DataSource(source => { source.Read(read => { read.Action("Filetypedrop", "FileConTempCreate"); }).ServerFiltering(true); }))
                            </div>
                            <div class="col-sm-3">
                                <label for="Reconname" class="title">Import By</label>
                                <input class="form-control" id="Importby" name="Importby" type="text" data-bind="    value: Importby">
                            </div>
                            <div class="col-sm-2" style="margin-top:22px;">
                                <button type="button" id="Runprocess" onclick="validation()" class="btn btn-success"><i class="fa fa-check" aria-hidden="true"></i>&nbsp;Run</button>
                            </div>
                           
                        </div>

                        <div class="row" style="padding-right: 40px;">
                            <div class="col-sm-12">
                                <div class="panel-body" style="width:100%;max-height:100%">
                                    <div class="col-md-12" id="Process" style="margin-left:-28px;">
                                        <div class="form-group">
                                            @using (Html.BeginForm("Manualmatch", "Manualmatch", FormMethod.Post, new { @id = "form1" }))
                                            {
                                                <div>
                                                    @(Html.Kendo().Grid<Recon_Model.Report_model>().Name("filereport")
                                        .HtmlAttributes(new { style = "width:110%;height:380px;line-height:2em;font-weight:normal" })
                                                    //.ToolBar(toolbar => toolbar.Create().Text("Add To Match Off"))
                                        .Columns(columns =>
                                            {
                                                columns.Bound(m => m.file_gid).Title("File gid").Width(50);
                                                columns.Bound(m => m.file_name).Title("File Name").Width(100);
                                                columns.Bound(m => m.filetype_desc).Title("File Type").Width(100);
                                                columns.Bound(m => m.import_date).Title("Import Date").Width(90);
                                                columns.Command(cmd =>
                                                {
                                                    cmd.Custom("Delete").Text("<span class='fa fa-trash' style='color:#357ab8;font-size: 12px;'>").Click("myDeleteJs"); ;
                                                }).Title("Action").Width(50);
                                                //columns.Template(p => { }).ClientTemplate("<button type='button' onclick='return myDeleteJs()'><span class='fa fa-trash' style='color:#357ab8;font-size: 12px;'></button>").Width(60);
                                            })
                                      .Editable(editable =>
                             { editable.Mode(GridEditMode.PopUp).TemplateName("knockoffpop"); })
                                    .Pageable(pageable => pageable
                                        .Refresh(true)
                                        .PageSizes(true)
                                        .ButtonCount(5))
                                                    //.Filterable()
                                    .Sortable()
                                     .Selectable()
                                    .Scrollable()
                                                    //.Resizable(resize => resize.Columns(true))
                                    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                        //.Events(events => events.Error("error_handler"))
                                    .Model(model =>
                                        {
                                            model.Id(p => p.file_gid);
                                        })
                                   .Create(Create => Create.Action("SaveEmployee", "DedperuleList"))
                                   .Read(read => read.Action("ReportFilereportGrid_Read", "Report").Data("getslno"))
                                   .Update(update => update.Action("AddMatchOff_Save", "ManualMatchoff_model"))
                                    ))
                                                </div>
                                            }

                                        </div>


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</body>
</html>
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            $.alert({
                content: message,
                type: 'red',
            });
        }
    }

    $(document).ready(function () {
        kendodate_format();
        $("#period_from").kendoDatePicker({
            value: new Date(),// sets max date
            format: "dd-MM-yyyy"
        });
        $("#period_to").kendoDatePicker({
            value: new Date(),// sets max date
            format: "dd-MM-yyyy"
        });
        getslno();
    });
    //function getFormated_StringDate(date) {   //get DD/MM/YYYY or MM/DD/YYYYY
    //    if (date != "" || date != undefined) {
    //        var d = date.split("/");
    //        return d[2] + "-" + d[1] + "-" + d[0];
    //    }
    //}
    function validation() {
        var msg = "";
        if ($("#period_from").val() != "") {

        }
        else {
            msg += "Select Period From Date";
        }

        if ($("#period_to").val() != "") {

        }
        else {
            msg += " Select Period To Date";
        }


        if (msg == "") {
            Runprocess()
        } else {
            $.dialog({
                title: 'Impact',
                content: msg,
                type: 'green',
            });
        }
        return msg;
    }
    function Runprocess() {
        $("#filereport").data("kendoGrid").dataSource.read();
    }

    function getslno() {
        var period_from = $('#period_from').val();
        var period_to = $("#period_to").val();
        var formatted_period_from = getFormated_StringDate(period_from);
        var formatted_period_to = getFormated_StringDate(period_to);
        var Filetype = $("#FileType").val();
        if (Filetype == "") {
            Filetype = "";
        }
        var Importby = $("#Importby").val();
        if (Importby == "") {
            Importby = "";
        }
        return { period_from: formatted_period_from, period_to: formatted_period_to, Filetype: Filetype, Importby: Importby }
    }
    function myDeleteJs() {
        debugger;
        var grid = $("#filereport").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        var Dkoid = (model.file_gid);
        $.confirm({
            title: 'Message',
            content: 'Are you sure to Delete this Record',
            buttons: {
                confirm: function () {
                    $.confirm({
                        title: 'Delete Reason',
                        content: '' +
                        '<form action="" class="formName">' +
                        '<div class="form-group">' +
                        '<label>Reason</label>' +
                        '<input type="text" placeholder="Reason" class="name form-control" required />' +
                        '</div>' +
                        '</form>',
                        buttons: {
                            formSubmit: {
                                text: 'Submit',
                                btnClass: 'btn-blue',
                                action: function () {
                                    var name = this.$content.find('.name').val();
                                    if (!name) {
                                        $.alert('Reason cannot be empty');
                                        return false;
                                    }
                                    //var user_code = "admin";
                                    @*var user_code = '@System.Web.Configuration.WebConfigurationManager.AppSettings["usercode"]';*@
                                    var user_code = '@Request.RequestContext.HttpContext.Session["usercode"]';
                                    $.ajax({
                                        type: "POST",
                                        data: '{name: "' + name + '",Dkoid:  "' + Dkoid + '",user_code:  "' + user_code + '" }',
                                        //  url: "/Report/ReportFilereportGrid_del",
                                        url: '@Url.Action("ReportFilereportGrid_del", "Report")',
                                        dataType: "json",
                                        contentType: 'application/json; charset=utf-8',
                                        success: function (Data1) {
                                            $.dialog({
                                                title: 'Impact',
                                                content: Data1,
                                                type: 'green',

                                            });
                                            $("#filereport").data("kendoGrid").dataSource.read();
                                        },
                                    });
                                }
                            },
                            cancel: function () {
                                //close
                            },
                        },

                    });
                },
                cancel: {
                    text: 'cancel',
                    btnClass: 'btn-blue',
                    keys: ['enter', 'shift'],
                }
            }
        });
    }
</script>
