@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
@*@model Recon_Model.AcMaster_model;*@
<style>
    div.k-window {
        display: inline-block;
        position: absolute;
        z-index: 10001;
        border-style: solid;
        border-width: 1px;
        padding-top: 1em;
        width: 40%;
        font-weight: normal;
    }

    .k-edit-form-container {
        position: relative;
        width: 100%;
    }
</style>
<form id="Acmasteradd" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="form-group" style="padding-top:30px">
                @using (Html.BeginForm("Manualmatch", "Manualmatch", FormMethod.Post, new { @id = "form1" }))
                {
                    <div style="padding-left:20px;padding-right:20px">
                        @(Html.Kendo().Grid<Recon_Model.ManualMatchoff_model>().Name("processGrid")
                                .HtmlAttributes(new { style = "width:100%;line-height:2em;font-weight:normal" })
                                .ToolBar(toolbar => toolbar.Create().Text("Add New"))
                                .Columns(columns =>
                                {
                                    columns.Bound(m => m.SlNo).Title("Sl. No").Width(50);
                                    columns.Bound(m => m.AccountNo).Title("Account No").Width(100);
                                    columns.Bound(m => m.TranDate).Title("Transaction Date").Width(100);
                                    columns.Bound(m => m.Description).Title("Description").Width(100);
                                    columns.Bound(m => m.Source).Title("Source").Width(100);
                                    columns.Bound(m => m.Comparition).Title("Comparition").Width(100);                                   
                                    columns.Bound(m => m.Select).ClientTemplate("<input type='checkbox'  #= Select == true ? checked='checked' : '' # />").Width(10);
                                })
                             .Editable(editable =>
                             { editable.Mode(GridEditMode.PopUp).TemplateName("DeputeRuleEdit"); })
                             .Pageable(pageable => pageable
                                        .Refresh(true)
                                        .PageSizes(true)
                                        .ButtonCount(5))
                            .Filterable()
                             .Sortable()
                             .Resizable(resize => resize.Columns(true))
                             .DataSource(dataSource => dataSource
                             .Ajax()
                             .PageSize(10)
                              .Events(events => events.Error("error_handler"))
                             .Model(model =>
                             {
                                 model.Id(p => p.SlNo);
                                 model.Field(p => p.Select).Editable(false);
                             })
                             .Create(Create => Create.Action("SaveEmployee", "DedperuleList"))
                             .Read(read => read.Action("DedupeGrid_ReadList", "Manualmatch"))
                             .Update(update => update.Action("EmployeeGrid_Update", "EmployeeMaster"))
                             ))
                    </div>
                }
                </div>
            </div>

    </div>
</form>
