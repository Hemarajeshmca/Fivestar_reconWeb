@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
@model  Recon_Model.Recontype_model
<style>
    div.k-window {
        display: inline-block;
        position: absolute;
        z-index: 10001;
        border-style: solid;
        border-width: 1px;
        padding-top: 1em;
        width: 40%;
        font-weight: normal;
    }

    .form-horizontal .form-group {
        margin-right: 25px;
        margin-left: -15px;
    }

    .k-edit-form-container {
        position: relative;
        width: 100%;
    }
</style>
<div>
    <table style="border:1px;">
        <tr>
            @* <label for="Reconname1" class="col-sm-4">Recon Name</label>*@
            <td>
                @Html.Label("Recon Name", new { style = "font-size: 14px;font-weight: 600 !important;width:145px;margin-left: 11%; " })
            </td>
            @*<input class="text-box" id="ReconName" name="ReconName" type="text"  data-bind="value:ReconName" style="width:50%">*@
            <td>
                @Html.TextBoxFor(model => model.ReconName, new { style = "height:20px;width: 257px;font-weight:normal; " })
            </td>
            @*<div class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error" style="margin-left: 14.5em;display: block;" data-for="ReconName" data-valmsg-for="ReconName" id="ReconName_validationMessage" role="alert"><span class="k-icon k-warning"> </span>Recon Name Should Not Be Blank<div class="k-callout k-callout-n"></div></div>*@
        </tr>
        <tr style="height:20px"></tr>
        <tr>
            <td>@Html.Label("Mapping Type", new { style = "font-size: 14px;font-weight: 600 !important;width:120px;margin-left: 11%; " })</td>
            <td>
                <input type="radio" name="MappingType_code" onchange="filetype()" value="C"> Contra
                <input type="radio" name="MappingType_code" onchange="filetype()" value="M" style="margin-left: 10px"> Mirror
                <input type="radio" name="MappingType_code" onchange="filetype()" value="P" style="margin-left: 10px" checked> Proof
            </td>
        </tr>
        <tr style="height:20px"></tr>
        <tr>
            <td>@Html.Label("Account 1", new { style = "font-size: 14px;font-weight: 600 !important;width:80px;margin-left: 11%; " })</td>
            <td>
                @(Html.Kendo().DropDownList()
                                 .Name("account1_desc")
                                 .DataTextField("account1_desc")
                                 .DataValueField("account1_desc")
                                         .Events(e => e.Change("account_name1").DataBound("accname1"))
                                 .HtmlAttributes(new { style = "height:25px;width: 267px;font-weight: normal" })
                                 .DataSource(source => { source.Read(read => { read.Action("AccNo1drop", "ReconSetup"); }).ServerFiltering(true); })
                )
            </td>
        </tr>
        <tr id="acc1" style="display:none">
            <td>@Html.Label("", new { style = "width:80px;margin-left: 11%; " })</td>
            <td>
                <input class="text-box single-line" id="accname" name="accname" type="text" value="" style="margin-top: 14px;border: none;display:none;font-weight: bold;width: 267px">
            </td>
        </tr>
        <tr style="height:5px"></tr>
        <tr id="acc2drop" style="display:none">
            <td>@Html.Label("Account 2", new { style = "width:80px;margin-left: 11%; " })</td>
            <td>
                @(Html.Kendo().DropDownList()
                                 .Name("account2_desc")
                                 .DataTextField("account2_desc")
                                 .DataValueField("account2_desc")
                                 .HtmlAttributes(new { style = "height:25px;width: 267px;font-weight: normal" })
                                         .Events(e => e.Change("account_name2").DataBound("accname2"))
                                 .DataSource(source => { source.Read(read => { read.Action("AccN02drop", "ReconSetup"); }).ServerFiltering(true); }))
            </td>
        </tr>
        <tr id="acc2" style="display:none">
            <td>@Html.Label("", new { style = "width:80px;margin-left: 11%; " })</td>
            <td id="accname1" style="display: none;">
                <input class="text-box single-line" id="accname2" name="accname2" type="text" value="" style="margin-top: 14px;border: none;font-weight: bold;width: 267px">
            </td>
        </tr>


        <tr style="height:10px"></tr>
        <tr>
            <td>@Html.Label("Period From", new { style = "font-size: 14px;font-weight: 600 !important;width:80px;margin-left: 11%; " })</td>
            <td>
                <input class="cusDate" data-role='datepicker' id="period_from" name="period_from" data-bind="value:period_from" onkeypress="return date_validate(event)" />
                <span data-for='valid' class='k-invalid-msg'></span>
            </td>
        </tr>
        <tr style="height:20px"></tr>
        <tr>

            <td>@Html.Label("Period To", new { style = "font-size: 14px;font-weight: 600 !important;width:80px;margin-left: 11%; " })</td>
            <td>
                <input class="cusDate" data-role='datepicker' id="period_to" name="period_to" data-bind="value:period_to" onkeypress="return date_validate(event)" /><span data-for='valid' class='k-invalid-msg'></span>

                <input type="checkbox" name="untillactive" id="untillactive" style="margin-top:10px" value="false">Untill Active
            </td>
        </tr>
        <tr style="height:20px"></tr>
        <tr>
            <td>@Html.Label("Status", new { style = "font-size: 14px;font-weight: 600 !important;width:80px;margin-left: 11%; " })</td>
            <td>
                <input type="radio" name="Status_code" value="Y" checked> Active
                <input type="radio" name="Status_code" value="N" style="margin-left: 10px"> InActive
            </td>
        </tr>
    </table>
</div>

<script>
    //$(document).ready(function () {
       

    //    kendodate_format();

    //    $("#period_from").kendoValidator({
    //        rules: {
    //            date: function (input) {
    //                var d = kendo.parseDate(input.val(), "dd/MM/yyyy");
    //                return d instanceof Date;
    //            }
    //        }
    //    });
    //    $("#period_to").kendoValidator({
    //        rules: {
    //            date: function (input) {
    //                var d = kendo.parseDate(input.val(), "dd/MM/yyyy");
    //                return d instanceof Date;
    //            }
    //        }
    //    });
       
    //});

</script>



