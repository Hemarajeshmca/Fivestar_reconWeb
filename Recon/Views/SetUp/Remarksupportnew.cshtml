@using Kendo.Mvc.UI;
@using Kendo.Mvc.UI.Fluent;
@using Kendo.Mvc.Extensions;
@using Kendo.Mvc.Resources;
@model Recon_Model.CategoryViewModel

<!Doctype html>
<html>
<head>
    <title></title>

    <style>
        
        .btn-danger {
            color: #fff;
            background-color: #d9534f;
            border-color: #d43f3a;
        }
        .box box-orange{
             margin-left: -10%;
            overflow-y: auto !important;
            height: 2500px;

        }
              .k-popup.k-list-container {
    width:210px !important;
    }

        .accordion_container {
            width: 100%;
        }

         .accordion_head {
            background-color: #337ab7;
            color: white;
            cursor: pointer;
            /*font-family: arial;*/
            font-size: 14px;
            margin: 0 0 1px 0;
            padding: 1px 3px;
            /*font-weight: normal;*/
        }

        .accordion_footer {
            background-color: #337ab7;
            color: white;
            cursor: pointer;
            font-family: arial;
            font-size: 14px;
            margin: 0 0 1px 0;
            padding: 1px 3px;
            font-weight: bold;
        }

        .accordion_body p {
            padding: 18px 5px;
            margin: 0px;
        }

        .plusminus {
            float: right;
        }

        .ioniconplus {
            width: 15px;
            background-image: url('../images/minus-circled.png');
            background-repeat: no-repeat;
            background-position: -50px -128px;
            display: inline-block;
            cursor: pointer;
        }

        /*.ob-right {
            text-align: right;
        }*/
        .gj-unselectable {
            margin-left: -10%;
            overflow-y: auto !important;
            height: 500px;
        }
    </style>

    <style>
        label {
            display: inline-block;
            max-width: 100%;
            margin-bottom: 5px;
        }

        div.k-window {
            display: inline-block;
            position: absolute;
            z-index: 10001;
            border-style: solid;
            border-width: 1px;
            padding-top: 1em;
            width: 60%;
            font-weight: normal;
        }

        .k-edit-form-container {
            position: relative;
            width: 120%;
            background: transparent;
            border-color: transparent;
        }

        .k-grid-content {
            overflow-x: scroll;
        }

        .k-window > div.k-popup-edit-form {
            padding: 1em 0;
            overflow: hidden;
        }

        a.k-button.k-button-icontext.k-grid-edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete {
            background: transparent;
            border-color: transparent;
        }

        span.k-icon.k-edit {
            display: none;
        }
    </style>
    <style>
        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-state-active {
            display: none;
        }

        a.k-button.k-button-icontext.k-grid-Edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete, a.k-button.k-button-icontext.k-grid-edit {
            background: transparent;
            border-color: transparent;
            color: #357ab8;
        }

        span.k-icon.k-edit {
            display: none;
        }
    </style>
    <style>
        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-state-active {
            display: none;
        }

        .k-grid-content {
            overflow-x: scroll;
        }

        label {
            display: inline-block;
            max-width: 100%;
            margin-bottom: 5px;
        }

        span.k-link {
            color: #fff !important;
            position: relative;
        }

        a.k-button.k-button-icontext.k-grid-Edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete, a.k-button.k-button-icontext.k-grid-edit {
            background: transparent;
            border-color: transparent;
        }

        span.k-icon.k-edit {
            display: none;
        }

        .k-grouping-header {
            color: #ffffff;
        }

        .k-grid-filter.k-state-active {
            background-color: rgb(51, 122, 183);
        }

        .k-state-active {
            display: block;
        }
    </style>

    @*Pagination*@
    <style>
        a {
            text-decoration: none;
            display: inline-block;
            padding: 8px 16px;
        }

            a:hover {
                background-color: #ddd;
                color: black;
            }

        .previous {
            background-color: #84b6e1;
            color: black;
        }

        .next {
            background-color: #367fa9;
            color: white;
        }

        .round {
            border-radius: 50%;
        }

        .page_bg {
            width: 100%;
            background-color: #E7E9EB;
        }
    </style>
    @*pagination end*@
    <style>
        label {
            display: inline-block;
            max-width: 100%;
            margin-bottom: 5px;
        }

        div.k-window {
            display: inline-block;
            position: absolute;
            z-index: 10001;
            border-style: solid;
            border-width: 1px;
            padding-top: 1em;
            width: 60%;
            font-weight: normal;
        }

        .k-edit-form-container {
            position: relative;
            width: 120%;
        }

        .k-grid-content {
            overflow-x: scroll;
        }

        .k-window > div.k-popup-edit-form {
            padding: 1em 0;
            overflow: hidden;
        }

        a.k-button.k-button-icontext.k-grid-edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete {
            background: transparent;
            border-color: transparent;
        }

        span.k-icon.k-edit {
            display: none;
        }
    </style>

    <style>
        .btnsubmit {
            color: #fff;
            border-radius: 5px;
            padding: 8px 25px;
            border: 0 none;
            background-color: #337ab7;
        }

        .k-grid-content {
            overflow-x: scroll;
        }

        .k-state-active {
            display: none;
        }

        .k-grouping-header {
            color: #ffffff;
        }

        /*.k-header {
                font-weight: bold;
            }*/

        .k-grid-filter.k-state-active {
            background-color: rgb(51, 122, 183);
        }

        .k-state-active {
            display: block;
        }
    </style>

    <style>
        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-state-active {
            display: none;
        }

        div.k-window {
            display: inline-block;
            position: absolute;
            z-index: 10001;
            border-style: solid;
            border-width: 1px;
            padding-top: 1em;
            width: 40%;
            font-weight: normal;
        }

        .k-grid-header th.k-with-icon .k-link {
            margin-right: -11px;
        }

        .k-edit-form-container {
            position: relative;
            width: 100%;
        }

        .k-grid-header th.k-with-icon .k-link {
            margin-right: -11px;
            color: #fff !important;
        }

        a.k-button.k-button-icontext.k-grid-Edit {
            background: rgb(51, 122, 183);
            border-color: rgb(51, 122, 183);
        }

        .k-grid-filter.k-state-active {
            background-color: rgb(51, 122, 183);
        }

        .k-state-active {
            display: block;
        }

        .k-link {
            color: #fff !important;
        }
    </style>

    <style>
        .error_show {
            color: red;
            margin-left: 10px;
        }

        .k-state-active {
            display: none;
        }

        div.k-window {
            display: inline-block;
            position: absolute;
            z-index: 10001;
            border-style: solid;
            border-width: 1px;
            padding-top: 1em;
            width: 40%;
            font-weight: normal;
        }

        .k-grid-header th.k-with-icon .k-link {
            margin-right: -11px;
        }

        .k-edit-form-container {
            position: relative;
            width: 100%;
        }

        .k-grid-header th.k-with-icon .k-link {
            margin-right: -11px;
            color: #fff !important;
        }

        a.k-button.k-button-icontext.k-grid-Edit, a.k-button.k-button-icontext.k-grid-edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete {
            background: transparent;
            border-color: transparent;
        }

        .k-grid-filter.k-state-active {
            background-color: rgb(51, 122, 183);
        }

        .k-state-active {
            display: block;
        }
          .k-webkit {
            overflow: hidden !important;
        }
        .k-input {
            background-color: #e3e3e3 !important;
        }
    </style>
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    <div class="content-wrapper">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-orange" style="height:auto;padding:10px;">
                        <div class="box-header text-center with-border">
                            <h3 class="box-title">Exception Theming</h3>
                        </div>
                        <div class="row" style="padding-bottom:20px;margin-left:-28px;">


                            <div class="col-md-12">

                                <div class="col-sm-2">
                                    <label for="period_from" class="title">Date From</label>
                                    <input class="cusDate" data-role='datepicker' style="width:100%" id="period_from" name="period_from" />
                                </div>
                                <div class="col-sm-2">
                                    <label for="period_from" class="title">Date To</label>
                                    <input class="cusDate" data-role='datepicker' style="width:100%" id="period_to" name="period_to" />
                                </div>

                                <div class="col-sm-3">
                                    <label for="filetype" class="title">Recon Name </label>&nbsp;


                                    @(Html.Kendo().DropDownList()
                                                        .Name("ReconName_id")
                                                        .DataTextField("ReconName")
                                                        .DataValueField("ReconName_id")
                                               .HtmlAttributes(new { style = "height:25px;width:100%;font-weight: normal" })
                                                        @*.DataSource(source => { source.Read(read => { read.Action("ApplyRecontype_drop", "ApplyRule"); }).ServerFiltering(true); }))*@
                                                   .DataSource(source => { source.Read(read => { read.Action("getuserrecon", "SetUp"); }).ServerFiltering(true); }))



                                    </div>
                                <div class="col-sm-4" style="margin-top:22px;">
                                    <button type="button" value="Refresh" onclick="OnRefresh()" id="btn_submit" class="btn btn-success"><i class="fa fa-filter" aria-hidden="true"></i>&nbsp;Refresh</button>&nbsp;
                                    <button type="button" id="run" class="btn btn-primary" onclick="Runprogress()"><i class="fa fa-eye" aria-hidden="true"></i>&nbsp;Show</button>&nbsp;
                                    <button type="button" id="exportExcel" onclick="exportExcel()" class="btn btn-primary"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp;</button>
                                </div>
                               

                                </div>


                            </div>
                        <div class="row" style="padding-bottom:7px;margin-top:-4px;">
                            <div class="col-md-12">
                                <div class="accordion_container">
                                    <div class=" panel panel-primary" style="margin-bottom:5px;">
                                        @*<div class="container">*@
                                        <div class="accordion_head">Attribute Search <span class="plusminus">+</span> </div>
                                        <div class="accordion_body">
                                            <div class="panel-body" style="padding-right:50px;width:100%;max-height:100%">
                                                @*<div style="margin:auto;height:110px;overflow:auto;width:104%;">
                                    <div id="AttributeDataPartial" style="border-top:groove thin;border-top-style:ridge;border-bottom:groove thin;border-bottom-style:ridge;"> </div>
                                </div>*@
                                                <div id="Partialone" style="margin:auto;height:200px;overflow:auto;width:104%;">
                                                    @Html.Partial("AdhocEditpartialview")
                                                </div>
                                            </div>
                                        </div>
                                        <div class="accordion_footer">
                                            <div class="row">
                                                @*<div class="col-sm-2">
                                    <label>Filter Applied : </label>
                                </div>*@
                                                <div class="col-sm-10">
                                                    @Html.TextArea("Message", new { rows = 1, columns = 40, id = "framevalue", style = "width:90%;background-color:#337ab7;border:none;color:white;font-size:smaller;" })
                                                </div>

                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="accordion_container1"></div>
                       
                        <div class="accordion_body1">
                            <div class="panel-body" style="padding-right:50px;width:106%;max-height:100%;margin-left:-1%;">*@
                                <div id="Process" style="margin-top: 0px;">
                                    <div class="form-group">
                                        <div>
                                            @(Html.Kendo().Grid<Recon_Model.ManualMatchoff_model>().Name("processGrid")
                                        .HtmlAttributes(new { style = "height:280px;font-weight:normal" })
                                        .Columns(columns =>
                                            {
                                                columns.Command(command =>
                                                {
                                                    command.Custom("Edit").Text("<span class='fa fa-bars' style='color:#357ab8;font-size: 12px;'>  Remark").Click("Reason");
                                                    command.Custom("View").Text("<span class='fa fa-eye' style='color:#357ab8;font-size: 12px;'>").Click("viewDetails");
                                                }).Title("Action").Width(50);
                                                columns.Bound(m => m.SlNo).Title("Sl.No").Width(60).Hidden();
                                                columns.Bound(m => m.tran_gid).Title("tran").Width(100).Hidden();
                                                columns.Bound(m => m.acc_no).Title("A/c No").Width(40);
                                                columns.Bound(m => m.TranDate).Title("Tran Date").Width(50);
                                                columns.Bound(m => m.ValueDate).Title("Value Date").Width(90).Hidden();
                                                columns.Bound(m => m.Particulars).Title("Trans Desc").Width(150);
                                                columns.Bound(m => m.Accountmode).Title("A/c Mode").Width(20);
                                                columns.Bound(m => m.excp_amount).Title("Exception Amount").Width(50);
                                                columns.Bound(m => m.amount).Title("Amount").Width(60);
                                                columns.Bound(m => m.remark1).Title("remark1").Width(1);
                                                columns.Bound(m => m.remark2).Title("remark2").Width(1);
                                            
                                                //columns.Command(cmd =>
                                                //{
                                                    
                                                //}).Title("Action").Width(50);
                                            })
                                    .Editable(editable =>
                                    { editable.Mode(GridEditMode.PopUp).TemplateName("Remarkgridview"); })
                                    .Excel(excel => excel
                                    .AllPages(true)
                                    .FileName("Remark suppport"))
                                    .Filterable()
                                    .Sortable()
                                    .Scrollable()
                                    .Resizable(resize => resize.Columns(true))
                                    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(5000)
                                    .Model(model =>
                                    {
                                        model.Id(p => p.SlNo);
                                        model.Field(p => p.Select).Editable(false);
                                    })
                                 .Read(read => read.Action("ManualmatchoffGridRead", "ManualMatchOff").Data("additionalinfo"))
                                  // .Read(read => read.Action("GridManualmatchoff", "ManualMatchOff").Data("getslno"))
                                   .Update(update => update.Action("AddMatchOff_Save", "ManualMatchoff_model"))
                                    ))
                                            <div class="page_bg">
                                                <a href="#" onclick="pagination('first')" class="previous round">&#171;</a>
                                                &nbsp;<a href="#" onclick="pagination('previous')" class="previous round">&#8249;</a>&nbsp; <input type="text" id="gotoPage" style="width:30px">
                                                &nbsp;<a href="#" onclick="pagination('next')" class="next round">&#8250;</a>
                                                &nbsp;<a href="#" onclick="pagination('last')" class="next round">&#187;</a>
                                                &nbsp;<select name="items" id="items" onchange="gridpage()">
                                                    <option value="100">100</option>
                                                    <option value="500">500</option>
                                                    <option value="1000">1000</option>
                                                    <option value="2000">2000</option>
                                                </select>
                                                &nbsp;<label>items per page </label>
                                                &nbsp; &nbsp; &nbsp; &nbsp;<label style="margin-left:109px;">Total No Of Records : </label><input type="text" readonly id="total" style="width:auto;border:none;background-color:#E7E9EB;margin-left:0px;">
                                                &nbsp;<label style="margin-left:-111px;">Total pages : </label><input type="text" readonly id="totalpage" style="width:auto;border:none;background-color:#E7E9EB;margin-left:-1px;">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @*</div>
                            </div>
                        </div>*@
                    </div>
                    <div id="dialog">
                        <button type="button" id="exportExcel1" style="margin-left:18px;margin-top:-7px" onclick="exportExcel1()" class="btn btn-primary"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp;</button>
                        <div id="Maingrid" class="col-md-12" style="margin:auto;height:auto;top:10px;width:100%;"> </div>
                    </div>
                    <div id="dialog1">
                        <input type="hidden" id="tranrecon_gid">
                        <div class="row">
                            <div class="col-sm-3" style="margin-left:5%;width:32%;">
                                <label for="filetype" class="title">Reason</label>

                                @(Html.Kendo().DropDownList()
                                                    .Name("remark_desc")
                                                    .DataTextField("remark_desc")
                                                    .DataValueField("remark_desc")
                                                    .Events(e => e.Change("onchange"))
                                                    .HtmlAttributes(new { style = "width:150%" })
                                                    .DataSource(source => { source.Read(read => { read.Action("Remark_drop", "SetUp"); }).ServerFiltering(true); }))
                            </div>
                    
                            <div class="col-sm-3" style="margin-left:3%;">
                                <label for="filetype" class="title">Additional Remark</label>
                                <input type="text"  class="form-control" id="tran_remark" style="width:145%;height:22px;">
                                <input type="hidden" class="form-control" id="tran_remark1">
                                <input type="hidden" class="form-control" id="tran_remark2">
                            </div>
                               
                         </div>           
                            <div class="row" style="padding-left:177px;margin-top:4%;">
                            <label></label> <br />
                            <button type="button" value="Refresh" onclick="editDetails()" id="btn_submit" class="btn btn-primary"><i class="fa fa-refresh" aria-hidden="true"></i>&nbsp;Submit</button>&nbsp;
                            <button type="button" value="Clear" onclick="cancel_btn()" id="btn_sendmail" class="btn btn-primary"><i class="fa fa-eraser" aria-hidden="true"></i>&nbsp;cancel</button>&nbsp;
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</body>
</html>
<script type="text/javascript">
    var trangid;
    var count;
    var result = 0;
    var orgindata = "";
    var radiochecked;
    var Rec_id;
    $(document).ready(function () {
        debugger;
        var Transaction_Excreport_id = "14";
        $("#report_gid").data("kendoDropDownList").value(Transaction_Excreport_id);

        $('#report_gid').data("kendoDropDownList").enable(false);
        kendodate_format();
        var mindate = '@Request.RequestContext.HttpContext.Session["mindate"]';
        $("#period_from").kendoDatePicker({
            value: mindate,// sets max date
            format: "dd-MM-yyyy"
        });
        $("#period_to").kendoDatePicker({
            value: new Date(),// sets max date
            format: "dd-MM-yyyy"
        });
        $("#gotoPage").val(1);
        $("#Process").hide();
        $("#exportExcel").hide();
        $("#exportExcel1").hide();
        $("#dialog1").hide();
        debugger;
        var dropdown_valuefreeze = $("#report_gid").data("kendoDropDownList").dataSource.read();

    })
    //function getFormated_StringDate(date) {   //get DD/MM/YYYY or MM/DD/YYYYY
    //    if (date != "" || date != undefined) {
    //        var d = date.tt("/");
    //        return d[2] + "-" + d[1] + "-" + d[0];
    //    }
    //}

    function cancel_btn() {
        debugger;
        var wnd1 = $("#dialog1").data("kendoWindow");
        wnd1.close();
    }

    

    function exportExcel() {
        $("#processGrid").getKendoGrid().saveAsExcel();
        debugger;

   


    }
    function getslno() {
        var grid = $("#processGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        //trangid = (model.tran_gid);
        var ReconName_id = $("#ReconName_id").val();
        if (ReconName_id == "") {
            ReconName_id = 0;
        }
        var period_from = $('#period_from').val();
        var period_to = $("#period_to").val();
        
        if (period_from == "") {
            var formatted_period_from = null;
        } else {
            formatted_period_from = period_from.split("-").reverse().join("-");
            //formatted_period_from = getFormated_StringDate(period_from);
        }
        if (period_to == "") {
            var formatted_period_to = null;
        } else {
            formatted_period_to = period_to.split("-").reverse().join("-");
            //var formatted_period_to = getFormated_StringDate(period_to);
        }
        return { recongid: ReconName_id, periodfrom: formatted_period_from, periodto: formatted_period_to }
    }
    function Runprogress() {
        debugger;
        if (result == 0)
        {
            $.alert({
                title: 'Impact',
                content: "Please Generate the report",
                type: 'blue',


            });
            return false;
        }
        $("#Process").show();
        $("#processGrid").data("kendoGrid").dataSource.read();
        $("#exportExcel").show();
        if ($('.accordion_body').is(':visible')) {
            $(".accordion_body").slideUp(300);
            $(".plusminus").text('+');
        }
    }
    var currentpage = 0;
    var pageno = 1;
    var pagesize = 100;
    var currentpage = 0;
    function pagination(data) {
        debugger;
        if (data == "next") {
            currentpage = $("#gotoPage").val();
            pageno = parseInt(currentpage) + 1;
            pagesize = $("#items").val();
            $("#gotoPage").val(pageno);
            $("#processGrid").data("kendoGrid").dataSource.read();

        } else if (data == "last") {
            pageno = parseInt(parseInt(count) / parseInt(pagesize));
            pagesize = $("#items").val();
            $("#gotoPage").val(pageno);
            $("#processGrid").data("kendoGrid").dataSource.read();
        } else if (data == "first") {
            pageno = 1;
            pagesize = $("#items").val();
            $("#gotoPage").val(pageno);
            $("#processGrid").data("kendoGrid").dataSource.read();
        }
        else {
            currentpage = $("#gotoPage").val();
            pageno = currentpage - 1;
            pagesize = $("#items").val();
            $("#gotoPage").val(pageno);
            $("#processGrid").data("kendoGrid").dataSource.read();
        }

    }


    function gridpage() {
        debugger;
        pagesize = $('#items').val();
        var Actpageno = parseInt(parseInt(count) / parseInt(pagesize));
        $('#totalpage').val(Actpageno);
    }
    function OnRefresh() {
        debugger;
        var rflag = "";

        parcheck = 0;
        parchecksec = 0;

        $.confirm({
            icon: 'fa fa-warnings',
            title: 'Report Generation',
            autoClose: 'cancel|10000',
            //theme: 'dark',
            animationSpeed: 700,
            content: 'Are you sure you want to genearte?',
            type: 'blue',
            buttons: {
                confirm: function () {
                    debugger;
                    confirm()
                    debugger;
                    // rez();
                    // $("#radgrid").trigger("change");


                },





                cancel: function () {
                    $.alert({
                        icon: 'fa fa-success',
                        title: 'Apply filter',
                        //  theme: 'dark',
                        content: 'Cancelled.!',
                        type: 'blue',
                        animationSpeed: 700,
                    });

                }
            },
        });

        //$("#Griddat").data("kendoGrid").dataSource.read();

    }
    function confirm() {

        debugger;
   
        var checkflag = "";
        var reportcondition = "";
        var reportgid = 0;
        var Transaction_Rpt = {};
        var Recon_gid = $("#ReconName_id").data("kendoDropDownList").value();
        Rec_id = $("#report_gid").data("kendoDropDownList").value();//report_gid
        var str1 = "and";
        var str2 = "tran_date>="
        var str3 = "tran_date<="
        radiochecked = false;

        Transaction_Rpt.Report_condition = reportcondition;
        dataresponse = "";
        orgindata = "";
        getdata(reportcondition);

        orgindata = dataresponse;


        if (ran == "emptyvalue") {
            $.alert({
                title: 'Impact',
                content: "please fill the value",
                type: 'blue',


            });

        }
        else if (Recon_gid == "0" || Recon_gid == undefined || Recon_gid == "") {
            $.alert({
                title: 'Impact',
                content: "Recon name should not be Empty",
                type: 'blue',


            });
        }
        else if (orgindata == "" || orgindata == undefined) {
            $.alert({
                title: 'Impact',
                content: "Minimum one filter need to be Add.",
                type: 'blue',
                animationSpeed: 700,


            });
        }
        else if (parcheck != parchecksec) {
            $.alert({
                title: 'Impact',
                content: "Open and close paranthesis mismatch",
                type: 'blue',
                animationSpeed: 700,

            });
        }


        else {

            if (radiochecked == true) {

       

            }
               

            else {
                debugger;

                //$.alert({
                //    title: 'Impact',
                //    content: "Process is in progress...",
                //    type: 'green',
                //    buttons: {
                //        Ok: function () {
                            debugger;
                            $.ajax({
                                type: "POST",
                                data: '{table_name: "' + Table_Name + '",condition:  "' + orgindata + '",radio_checked:"' + radiochecked + '",recon_id:"' + Rec_id + '",Recon_gid:' + Recon_gid + '}',
                                //   url: "/Report/ReportExpenceGrid_Read",
                                //  url: '@Url.Action("ReportExpenceGrid_Read", "Report")',
                                url: '@Url.Action("ManualFirstgridload", "ManualMatchOff")',
                                dataType: "json",
                                contentType: 'application/json; charset=utf-8',
                                success: function (Data1) {
                                    debugger;
                                    result = Data1[1];
                                    count = Data1[2];

                                    if (Data1[1] != "0") {
                                        //$.alert({
                                        //    icon: 'fa fa-success',
                                        //    title: 'Impact',
                                        //    content: Data1[0],
                                        //    type: 'green',
                                        //    animationSpeed: 700,
                                        //});
                                        Runprogress();
                                    } else {
                                        $.alert({
                                            icon: 'fa fa-warning',
                                            title: 'Impact',
                                            content: Data1[0],
                                            type: 'red',
                                            animationSpeed: 700,
                                        });
                                    }


                                },



                                error: function (result) {
                                    alert("Error" + result);
                                    console.log(result);
                                    $.alert({
                                        icon: 'fa fa-success',
                                        title: 'Impact',
                                        content: result,
                                        type: 'red',
                                        animationSpeed: 700,
                                    });
                                }
                            });
                        }
                    


        }


    }

    function CloseQcdpopup() {
        debugger;
         $("#processGrid").data("kendoGrid").dataSource.read();
       // $("#processGrid").data("KendoGrid").dataSource.read();
    }

    function additionalinfo() {
        debugger;
        var r = Table_Name;
        //if (r != "") {
        //    $("#gridradio").show();
        //}
        $("#total").val(count);
        var Actpageno = parseInt(parseInt(count) / parseInt(pagesize));
        $('#totalpage').val(Actpageno);
        return {
            outresult: result,
            _count: count,
            _pageno: pageno,
            _pagesize: pagesize,
            table_name: Table_Name,
            condition: orgindata,
            radio_checked: radiochecked,
            recon_id: Rec_id
        }

    }
    function onRequestEnd(e) {
        debugger;
    }
    function editDetails() {
        debugger;
        var grid = $("#processGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));

        var tranrecon_gid = $("#tranrecon_gid").val();
        var reason= $("#remark_desc").data("kendoDropDownList").value();

        if (reason == "Remark1")
        {
            var remark1= $("#tran_remark").val();
        }
        else {
            var remark2 = $("#tran_remark").val();
        }
       

       

        $.ajax({
            type: "POST",
            data: '{remark1: "' + remark1 + '",tran_gid:  "' + trangid + '",remark2:"'+ remark2 + '" }',
            // url: "/SetUp/RemarkReason",
            url: '@Url.Action("RemarkReason_new", "SetUp")',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                debugger;
                if (data[1] > 0) {
                    $.dialog({
                        title: 'Imapct',
                        content: data[0],
                        type: 'green',

                    });
                   
                    $("#tabs1").show();
                    $("#applyruledtl_gid").val(data[1]).trigger("change");
                    var wnd1 = $("#dialog1").data("kendoWindow");
                    if (wnd1) {
                        wnd1.close();
                    }
                }
                else {
                    $.dialog({
                        title: 'Impact',
                        content: data[0],
                        type: 'green',
                    });
                    //event.container.data("kendoWindow").one("close", onEditorTemplateClosing);
                }
            },

        });
    }
    function Reason(e) {
        window_open1();
    }

    function onchange(e) {
        debugger;

        var reason = $("#remark_desc").data("kendoDropDownList").value();
        var remark1 = $("#tran_remark1").val();
        var remark2 = $("#tran_remark2").val();

        if(reason=="Remark2")
        {
            $("#tran_remark").val(remark2);
        }
        else
        {
            $("#tran_remark").val(remark1);
        }
      
    }


    function window_open1() {
        debugger;
        var grid = $("#processGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        var tranrecon_gid = model.tranrecon_gid;
        var remark1 = model.remark1;
        var remark2 = model.remark2;
        $("#tran_remark1").val(remark1);
        $("#tran_remark2").val(remark2);
        trangid = (model.tran_gid);
        $("#tran_remark").val(remark1);
        $("#tranrecon_gid").val(tranrecon_gid);
        $("#dialog1").kendoWindow();
        var dialog1 = $("#dialog1").data("kendoWindow");
        dialog1.open().element.closest(".k-window").css({
            top: 143,
            left: 424, height: 168, width: 544
        });
        dialog1.title("Remark");
        dialog1.bind("open", window_open);
    }
    function viewDetails(e) {
        var grid = this,
        selectedRow = $(e.target).closest("tr")[0];
        grid.editRow(selectedRow);
        $(".k-grid-update").hide();
        $(".k-window-title").text("View");
       // window_open();
    }
    function window_open() {
        debugger
        var table_name = "recon_trn_vtranrecon"
        var grid = $("#processGrid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));

        var filetype = model.filetype;
        var tranrecon_gid = model.tranrecon_gid;
        var reportcondition = "and tranrecon_gid = " + tranrecon_gid
        $.ajax({
            type: "POST",
            data: '{table_name: "' + table_name + '",condition:  "' + reportcondition + '" }',
            // url: "/Report/ReportExpenceGrid_Read",
            url: '@Url.Action("ReportExpenceGrid_Read", "Report")',

            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (Data1) {
                $("#dialog").kendoWindow();
                var dialog = $("#dialog").data("kendoWindow");
                dialog.open().element.closest(".k-window").css({
                    top: 121,
                    left: 300, height: 400, width: 900
                });
                dialog.title("Manual Match - Rule Based");
                dialog.bind("open", window_open);
                debugger
                $("#exportExcel1").show();
                var columns = [];
                var chkval = JSON.parse(Data1);
                var arr = [];
                $.each(chkval, function (i, e) {
                    debugger;
                    $.each(e, function (key, val) {
                        arr.push(val);
                    });

                });
                if (arr == "No Records Found!" || arr == "Error in Data!") {
                    alert("No Records found..!");
                    return false;
                }
                var data = JSON.parse(Data1);
                // var data2 = JSON.parse(result.Data2);
                var i = 0;

                var entryIndex = "entries[" + i + "]";
                for (var val in data[0]) {

                    if (val == "Collection Center Name") {
                        columns.push({
                            field: entryIndex,
                            title: key,
                            attributes: { style: "text-align: left;" }
                        });
                    }
                    else {
                        if (val != "Collection Center Name")
                            columns.push({
                                field: entryIndex,
                                title: val,
                            });
                    }
                    i = i + 1;
                    entryIndex = "entries[" + i + "]";
                }
                var rows = [];
                var data1 = JSON.parse(Data1);

                $.each(data1, function (i, e) {
                    var entryArray = [];
                    $.each(e, function (key, val) {

                        entryArray.push(val);
                    });
                    rows.push(kendo.observable({
                        entries: entryArray
                    }));

                });

                var viewModel = kendo.observable({
                    gridRows: rows
                });

                var configuration = {
                    //dataBound: onDataBound,
                    height: 350,
                    navigatable: true,
                    groupable: false,
                    editable: false,
                    sortable: true,
                    Scrollable: true,
                    filterable: false,
                    pagable: false,
                    resizable: false,
                    persistSelection: true,
                    selectable: "false",
                    columns: columns,
                    rows: viewModel,
                    excel: {
                        fileName: "Manual Match.xlsx",
                        filterable: true,
                        allPages: false
                    },
                };
                $("#example").remove();
                $('#Maingrid').append('<div id="example" style="position:relative" class="k-content"><table id="grid" data-bind="source: gridRows" style="position:relative;overflow:scroll;width:100%"></table></div>');
                var timeEditGrid = $("#grid").kendoGrid(configuration).data("kendoGrid");
                kendo.bind($("#grid"), viewModel);

                var grid = $("#grid").data("kendoGrid");
                for (var i = 0; i < grid.columns.length; i++) {
                    if (i != grid.columns.length) {
                        grid.autoFitColumn(i);  //autofit each column.
                    }
                }
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
    $(".accordion_head").click(function () {
        debugger;
        if ($('.accordion_body').is(':visible')) {
            $(".accordion_body").slideUp(300);
            $(".plusminus").text('+');
        }
        if ($(this).next(".accordion_body").is(':visible')) {
            $(this).next(".accordion_body").slideUp(300);
            $(this).children(".plusminus").text('+');
            $("#Process").show();
        } else {
            $(this).next(".accordion_body").slideDown(300);
            $(this).children(".plusminus").text('-');
            $("#Process").hide();
        }
      
    });

</script>